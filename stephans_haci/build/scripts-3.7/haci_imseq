import os
import argparse
import numpy as np
import pandas as pd
from scipy.misc import imsave
import haci as hci
import matplotlib.pyplot as plt

def bbox_is_incomplete(bbox,shape):
    if bbox[0].start<0 or bbox[0].stop>shape[0]: return True
    if bbox[1].start<0 or bbox[1].stop>shape[1]: return True
    if bbox[2].start<0 or bbox[2].stop>shape[2]: return True
    return False

def obj2bbox(obj,nt=13,nl=75,nc=75):
    # time slice
    t0 = obj.t0-(nt/2)
    t1 = obj.t0+(nt-nt/2)
    ts = slice(t0,t1)
    # line slice
    l0 = obj.l00-(nl-(obj.l01-obj.l00))/2
    l1 = l0+nl
    ls = slice(l0,l1)
    # column slice
    c0 = o.c00-(nc-(o.c01-o.c00))/2
    c1 = c0+nc
    cs = slice(c0,c1)
    return (ts,ls,cs)

def str2date(s):
    return datetime.datetime.strptime(s,"%Y-%m-%d").date()

def get_args():
    rx_root = os.getenv('RADOLAN_RX_HDCP2_ROOT','/vols/talos/datasets/radolan/rx_hdcp2/')
    argp = argparse.ArgumentParser(description='Generate image sequence for convective initation events in RADOLAN RX HDCP2 data.')
    argp.add_argument('ifile',nargs='*',help='one or multiple haci bbox files')
    argp.add_argument('-o','--ofile-fmt', metavar='OFILE_FMT', default='imgs/{dt:%Y-%m-%d}/haci-{dt:%Y-%m-%d}-{id:06}.png',help='Format string for filename of image files')
    argp.add_argument('-R','--rx-dir', metavar='RX_DIR', default=rx_root,help='Root dir for RADOLAN RX HDCP2 files')
    args = argp.parse_args()
    if len(args.ifile)==0:
        print "ERROR: ifile argument has to be specified.\n"
        argp.print_usage()
        exit(1)
    return args

if __name__ == '__main__':
    # get commandline arguments
    args = get_args()
    rx_date = None
    # loop over input files
    for ifile in args.ifile:
        objprops = pd.read_table(ifile,delim_whitespace=True,header=0,converters={'flags':lambda x: int(x,16)})
        objprops.time = [pd.Timestamp(d+'T'+t) for d,t in zip(objprops.date,objprops.time)]
        del objprops['date']
        m = (objprops.t1-objprops.t0)==6
        objprops = objprops[m]
        nl = nc = 75
        for o in objprops.itertuples():                
            bbox = obj2bbox(o)
            if bbox_is_incomplete(bbox,(288,900,900)): continue
            if o.time.date() != rx_date:
                rx_fname = '{root}/{dt:%Y}/hdfd_miub_drnet00_l3_dbz_v00_{dt:%Y%m%d}000000.nc'.format(root=args.rx_dir,dt=o.time)
                rx = hci.read_rx_hdcp2(rx_fname)
                rx_date = o.time.date()
            fname = args.ofile_fmt.format(dt=o.time,id=o.id)
            print fname, bbox
            dir = os.path.dirname(fname)
            if dir!='' and not os.path.isdir(dir):
                os.makedirs(dir)
            img = hci.dbz2rgb(rx.dbz[bbox]).reshape((13*nl,nc,4))
            for i in xrange(0,975,75):
                img[i,:,:]  = 255
                img[-1,:,:]  = 255
                img[:,0,:]  = 255
                img[:,-1,:] = 255
            imsave(fname,img)



